#!perl

=head1 NAME

  Crm

=cut

use strict;
use warnings FATAL => 'all';
use Crm::db::Crm;
use Abills::Base qw(days_in_month mk_unique_value in_array);
use Abills::Misc;
use Admins;
use Employees;
use Abills::Sender::Core;
use Crm::Leads;
use Crm::Salary;
require Abills::Defs;
our ($db, $admin, %conf, %lang, $html, @MONTHES, %permissions);

our Crm $Crm = Crm->new($db, $admin, \%conf);
our $Admins = Admins->new($db, $admin, \%conf);
our $Employees = Employees->new($db, $admin, \%conf);

our @PRIORITY = ($lang{LOW}, $lang{NORMAL}, $lang{HIGH});

#**********************************************************

=head2 cashbox_main() -

  Arguments:
    $attr -
  Returns:

  Examples:

=cut

#**********************************************************
sub crm_cashbox_main {
  my $action = 'add';
  my $action_lang = "$lang{ADD}";
  my %CASHBOX;

  if ($FORM{add}) {
    $Crm->add_cashbox({ %FORM });

    if (!$Crm->{errno}) {
      $html->message("success", "$lang{SUCCESS}", "$lang{CASHBOX_ADDED}");
    }
    else {
      $html->message("err", "$lang{ERROR}", "$lang{CASHBOX_NOT_ADDED}");
    }
  }
  elsif ($FORM{change}) {
    $Crm->change_cashbox({ %FORM });

    if (!$Crm->{errno}) {
      $html->message("success", "$lang{SUCCESS}", "$lang{CHANGED}");
    }
    else {
      $html->message("err", "$lang{ERROR}", "$lang{NOT_CHANGED}");
    }
  }

  if ($FORM{del}) {
    $Crm->delete_cashbox({ ID => $FORM{del} });

    if (!$Crm->{errno}) {
      $html->message("success", "$lang{SUCCESS}", "$lang{CASHBOX_DELETED}");
    }
    else {
      $html->message("err", "$lang{ERROR}", "$lang{CASHBOX_NOT_DELETED}");
    }
  }

  if ($FORM{chg}) {
    $action = 'change';
    $action_lang = "$lang{CHANGE}";

    $html->message("info", "$lang{CHANGE}");

    my $cashbox_info = $Crm->info_cashbox({ ID => $FORM{chg} });
    $CASHBOX{ID} = $FORM{chg};
    $CASHBOX{NAME} = $cashbox_info->{NAME};
    $CASHBOX{COMMENTS} = $cashbox_info->{COMMENTS};
  }

  $html->tpl_show(
    _include('cashbox_add', 'Crm'),
    {
      %CASHBOX,
      ACTION      => $action,
      ACTION_LANG => $action_lang,
    }
  );

  result_former(
    {
      INPUT_DATA      => $Crm,
      FUNCTION        => 'list_cashbox',
      DEFAULT_FIELDS  => "ID, NAME, COMMENTS",
      FUNCTION_FIELDS => 'crm_cashbox_balance:$lang{BALANCE}:id, change, del',
      EXT_TITLES      => {
        'name'     => "$lang{NAME}",
        'id'       => "ID",
        'comments' => "$lang{COMMENTS}"
      },
      TABLE           => {
        width   => '100%',
        caption => "$lang{CASHBOX}",
        qs      => $pages_qs,
        ID      => 'CASHBOX',
        header  => '',
        EXPORT  => 1,
      },
      #SELECT_VALUE    => {
      # every_month => { 0 => "$lang{NO}:text-danger",
      #             1 => "$lang{YES}:text-primary"
      #           },
      #},
      MAKE_ROWS       => 1,
      SEARCH_FORMER   => 1,
      MODULE          => 'Crm',
      TOTAL           => 1
    }
  );

  return 1;
}

#**********************************************************
=head2 cashbox_balance() -

  Arguments:
    $attr -
  Returns:

  Examples:

=cut
#**********************************************************
sub crm_cashbox_balance {

  my $action = 'choose';
  my $action_lang = "$lang{CHOOSE}";
  my %CASHBOX;

  my ($from_date, $to_date);

  # get dates
  if ($FORM{FROM_DATE}) {
    $from_date = $FORM{FROM_DATE};
  }
  else {
    my ($y, $m, undef) = split('-', $DATE);
    $from_date = "$y-$m-01";
  }

  if ($FORM{TO_DATE}) {
    $to_date = $FORM{TO_DATE};
  }
  else {
    my ($y, $m, undef) = split('-', $DATE);
    my $days_in_month = days_in_month();
    $to_date = "$y-$m-$days_in_month";
  }

  # get list of comings and spendings
  my $coming_cashbox_list = $Crm->list_coming(
    {
      COLS_NAME      => 1,
      CASHBOX_ID     => $FORM{ID} || $FORM{CASHBOX_ID},
      COMING_TYPE_ID => $FORM{COMING_TYPE_ID} || '',
      FROM_DATE      => $from_date,
      TO_DATE        => $to_date,
      SORT           => 5,
      DESC           => 'desc',
    }
  );

  my $spending_cashbox_list = $Crm->list_spending(
    {
      COLS_NAME        => 1,
      CASHBOX_ID       => $FORM{ID} || $FORM{CASHBOX_ID},
      SPENDING_TYPE_ID => $FORM{SPENDING_TYPE_ID} || '',
      FROM_DATE        => $from_date,
      TO_DATE          => $to_date,
      SORT             => 5,
      DESC             => 'desc',
    }
  );

  my $total_coming_amount = 0.00;
  my $total_spending_amount = 0.00;

  my %dates_hash;    # hash with dates and spending/comings

  # make dates hash
  foreach my $coming (@$coming_cashbox_list) {
    $total_coming_amount += $coming->{amount} || 0;
    push(@{ $dates_hash{ ($coming->{date} || 'NODATE') }{coming} }, ($coming->{amount} || 0));
  }

  foreach my $spending (@$spending_cashbox_list) {
    $total_spending_amount += $spending->{amount} || 0;
    push(@{ $dates_hash{ ($spending->{date} || 'NODATE') }{spending} }, ($spending->{amount} || 0));
  }

  my $balance = $total_coming_amount - $total_spending_amount;

  my @dates;                # date array
  my @coming_per_date;      # incoming sum per date
  my @spending_per_date;    # spending sum per date

  # make data for graphics
  foreach my $key (sort keys %dates_hash) {
    push(@dates, $key);
    my $spending_sum = 0;
    my $coming_sum = 0;

    foreach my $each_spend (@{ $dates_hash{$key}{spending} }) {
      $spending_sum += $each_spend || 0;
    }
    foreach my $each_come (@{ $dates_hash{$key}{coming} }) {
      $coming_sum += $each_come || 0;
    }
    push(@coming_per_date, $coming_sum);
    push(@spending_per_date, $spending_sum);
  }

  $CASHBOX{CASHBOX_SELECT} = cashbox_select({ ID => $FORM{ID} });
  $CASHBOX{CASHBOX_SELECT} = cashbox_select({ ID => $FORM{ID} });
  $CASHBOX{COMING_TYPE_SELECT} = coming_select({ ID => $FORM{ID} });
  $CASHBOX{SPENDING_TYPE_SELECT} = spending_select({ ID => $FORM{ID} });

  # charts for template
  # $CASHBOX{CHART} = $html->make_charts(
  #   {
  #     TRANSITION    => 1,
  #     TYPES         => { "$lang{COMING}" => 'COLUMN', "$lang{SPENDING}" => 'COLUMN' },
  #     X_TEXT        => \@dates,
  #     DATA          => { "$lang{SPENDING}" => \@spending_per_date, "$lang{COMING}" => \@coming_per_date },
  #     OUTPUT2RETURN => 1,
  #   }
  # );

  $CASHBOX{CHART} = $html->chart({
    TYPE              => 'bar',
    X_LABELS          => \@dates,
    DATA              => {
      "$lang{SPENDING}" => \@spending_per_date,
      "$lang{COMING}"   => \@coming_per_date
    },
    BACKGROUND_COLORS => {
      "$lang{COMING}"   => 'rgba(2, 99, 2, 0.5)',
      "$lang{SPENDING}" => 'rgba(5, 99, 132, 0.5)'
    },
    OUTPUT2RETURN     => 1,
  });

  #COMING BALANCE TABLE
  my @coming_title_plain = ("$lang{SUM}",
    "$lang{CASHBOX}",
    "$lang{COMING} $lang{TYPE}",
    "$lang{DATE}",
    "$lang{ADMIN}",
    "$lang{COMMENTS}");

  my $coming_list = $Crm->list_coming({
    FROM_DATE      => $from_date,
    TO_DATE        => $to_date,
    CASHBOX_ID     => $FORM{CASHBOX_ID} || '',
    COMING_TYPE_ID => $FORM{COMING_TYPE_ID} || '',
    COLS_NAME      => 1,
  });

  my $coming_report_table = $html->table(
    {
      width       => '100%',
      caption     => $lang{COMING},
      title_plain => \@coming_title_plain,
      #      qs          => $pages_qs . "SEARCH_MSG_TEXT=$FORM{SEARCH_MSG_TEXT}",
      ID          => 'CRM_COMING_REPORT',
      DATA_TABLE  => 1,
      DT_CLICK    => 1,
    }
  );

  my $month_total_sum = 0.00;
  my $month_total_count = 0;

  foreach my $coming (@$coming_list) {
    $coming_report_table->addrow(
      $coming->{amount},
      $coming->{cashbox_name},
      $coming->{coming_type_name},
      $coming->{date},
      $coming->{admin},
      $coming->{comments},
    );

    $month_total_count += 1;
    $month_total_sum += $coming->{amount};
  }
  my @coming_total_rows = ();
  push @coming_total_rows, [ "$lang{SUM}:", $html->b(sprintf('%.2f', $month_total_sum)) ];
  push @coming_total_rows, [ "$lang{COUNT}", $html->b($month_total_count) ];

  my $coming_total_table = $html->table(
    {
      width      => '100%',
      cols_align => [ 'right', 'right' ],
      rows       => \@coming_total_rows
    }
  );

  $CASHBOX{COMING_TABLE} = $coming_report_table->show();
  $CASHBOX{TOTAL_COMING_TABLE} = $coming_total_table->show();

  #SPENDING BALANCE TABLE
  my @spending_title_plain = ("$lang{SUM}",
    "$lang{CASHBOX}",
    "$lang{SPENDING} $lang{TYPE}",
    "$lang{DATE}",
    "$lang{ADMIN}",
    "$lang{COMMENTS}");

  my $spending_list = $Crm->list_spending({
    FROM_DATE        => $from_date,
    TO_DATE          => $to_date,
    CASHBOX_ID       => $FORM{CASHBOX_ID} || '',
    SPENDING_TYPE_ID => $FORM{SPENDING_TYPE_ID} || '',,
    COLS_NAME        => 1,
  });

  my $spending_report_table = $html->table(
    {
      width       => '100%',
      caption     => $lang{SPENDING},
      title_plain => \@spending_title_plain,
      #      qs          => $pages_qs . "SEARCH_MSG_TEXT=$FORM{SEARCH_MSG_TEXT}",
      ID          => 'CRM_SPENDING_REPORT',
      DATA_TABLE  => 1,
      DT_CLICK    => 1,
    }
  );

  my $spending_month_total_sum = 0.00;
  my $spending_month_total_count = 0;

  foreach my $coming (@$spending_list) {
    $spending_report_table->addrow(
      $coming->{amount},
      $coming->{cashbox_name},
      $coming->{spending_type_name},
      $coming->{date},
      $coming->{admin},
      $coming->{comments},
    );

    $spending_month_total_count += 1;
    $spending_month_total_sum += $coming->{amount};
  }
  my @spending_total_rows = ();
  push @spending_total_rows, [ "$lang{SUM}:", $html->b(sprintf('%.2f', $spending_month_total_sum)) ];
  push @spending_total_rows, [ "$lang{COUNT}", $html->b($spending_month_total_count) ];

  my $spending_total_table = $html->table(
    {
      width      => '100%',
      cols_align => [ 'right', 'right' ],
      rows       => \@spending_total_rows
    }
  );

  $CASHBOX{SPENDING_TABLE} = $spending_report_table->show();
  $CASHBOX{TOTAL_SPENDING_TABLE} = $spending_total_table->show();

  $html->tpl_show(
    _include('cashbox_balance', 'Crm'),
    {
      %CASHBOX,
      FROM_DATE      => $from_date,
      TO_DATE        => $to_date,
      ACTION         => $action,
      ACTION_LANG    => $action_lang,
      BALANCE        => $balance,
      TOTAL_COMING   => $total_coming_amount,
      TOTAL_SPENDING => $total_spending_amount,
    }
  );

  return 1;
}

#**********************************************************

=head2 cashbox_spending_type() -

  Arguments:
    $attr -
  Returns:

  Examples:

=cut

#**********************************************************
sub crm_cashbox_spending_type {

  my $action = 'add';
  my $action_lang = "$lang{ADD}";
  my %CASHBOX;

  if ($FORM{add}) {
    $Crm->add_type({ %FORM, SPENDING => 1 });

    if (!$Crm->{errno}) {
      $html->message("success", "$lang{SUCCESS}", "$lang{TYPE} $lang{ADDED}");
    }
    else {
      $html->message("err", "$lang{ERROR}", "$lang{TYPE} $lang{NOT} $lang{ADDED}");
    }
  }
  elsif ($FORM{change}) {
    $Crm->change_type({ SPENDING => 1, %FORM });

    if (!$Crm->{errno}) {
      $html->message("success", "$lang{SUCCESS}", "$lang{CHANGED}");
    }
    else {
      $html->message("err", "$lang{ERROR}", "$lang{NOT_CHANGED}");
    }
  }

  if ($FORM{del}) {
    $Crm->delete_type({ SPENDING => 1, ID => $FORM{del} });

    if (!$Crm->{errno}) {
      $html->message("success", "$lang{SUCCESS}", "$lang{TYPE} $lang{DELETED}");
    }
    else {
      $html->message("err", "$lang{ERROR}", "$lang{NOT} $lang{DELETED}");
    }
  }

  if ($FORM{chg}) {
    $action = 'change';
    $action_lang = $lang{CHANGE};

    $html->message("info", $lang{CHANGE});

    my $spending_type = $Crm->info_type({ SPENDING => 1, ID => $FORM{chg} });
    $CASHBOX{ID} = $FORM{chg};
    $CASHBOX{NAME} = $spending_type->{NAME};
    $CASHBOX{COMMENTS} = $spending_type->{COMMENTS};
  }

  $html->tpl_show(
    _include('cashbox_spending_type', 'Crm'),
    {
      %CASHBOX,
      ACTION      => $action,
      ACTION_LANG => $action_lang,
    }
  );

  result_former(
    {
      INPUT_DATA      => $Crm,
      FUNCTION        => 'list_spending_type',

      BASE_FIELDS     => 3,
      DEFAULT_FIELDS  => "id, name, comments",
      FUNCTION_FIELDS => "change, del",
      EXT_TITLES      => {
        'name'     => "$lang{NAME}",
        'id'       => "#",
        'comments' => "$lang{COMMENTS}"
      },
      TABLE           => {
        width   => '100%',
        caption => "$lang{SPENDING} $lang{TYPE}",
        qs      => $pages_qs,
        ID      => 'CASHBOX',
        header  => '',
        EXPORT  => 1,

        #MENU   => "$lang{ADD}:index=" . get_function_index('ring_rule_add') . ':add' . ";$lang{SEARCH}:index=$index&search_form=1:search;",
      },

      #SELECT_VALUE    => {
      # every_month    => { 0 => "$lang{NO}:text-danger",
      #                     1 => "$lang{YES}:text-primary",
      #},
      MAKE_ROWS       => 1,
      SEARCH_FORMER   => 1,
      MODULE          => 'Crm',
      TOTAL           => 1
    }
  );

  return 1;
}

#**********************************************************

=head2 cashbox_coming_type() -

  Arguments:
    $attr -
  Returns:

  Examples:

=cut

#**********************************************************
sub crm_cashbox_coming_type {

  my $action = 'add';
  my $action_lang = "$lang{ADD}";
  my %CASHBOX;

  if ($FORM{add}) {
    $Crm->add_type({ %FORM, COMING => 1 });

    if (!$Crm->{errno}) {
      $html->message("success", "$lang{SUCCESS}", "$lang{TYPE} $lang{ADDED}");
    }
    else {
      $html->message("err", "$lang{ERROR}", "$lang{TYPE} $lang{NOT} $lang{ADDED}");
    }
  }
  elsif ($FORM{change}) {
    $Crm->change_type({ COMING => 1, %FORM });

    if (!$Crm->{errno}) {
      $html->message("success", "$lang{SUCCESS}", "$lang{CHANGED}");
    }
    else {
      $html->message("err", "$lang{ERROR}", "$lang{NOT_CHANGED}");
    }
  }

  if ($FORM{del}) {
    $Crm->delete_type({ COMING => 1, ID => $FORM{del} });

    if (!$Crm->{errno}) {
      $html->message("success", "$lang{SUCCESS}", "$lang{TYPE} $lang{DELETED}");
    }
    else {
      $html->message("err", "$lang{ERROR}", "$lang{TYPE} $lang{NOT_DELETED}");
    }
  }

  if ($FORM{chg}) {
    $action = 'change';
    $action_lang = "$lang{CHANGE}";

    $html->message("info", $lang{CHANGED});

    my $coming_type = $Crm->info_type({ COMING => 1, ID => $FORM{chg} });
    $CASHBOX{ID} = $FORM{chg};
    $CASHBOX{NAME} = $coming_type->{NAME};
    $CASHBOX{COMMENTS} = $coming_type->{COMMENTS};
  }

  $html->tpl_show(
    _include('cashbox_coming_type', 'Crm'),
    {
      %CASHBOX,
      ACTION      => $action,
      ACTION_LANG => $action_lang,
    }
  );

  result_former(
    {
      INPUT_DATA      => $Crm,
      FUNCTION        => 'list_coming_type',

      BASE_FIELDS     => 3,
      DEFAULT_FIELDS  => "id, name, comments",
      FUNCTION_FIELDS => "change, del",
      EXT_TITLES      => {
        'name'     => "$lang{NAME}",
        'id'       => "#",
        'comments' => "$lang{COMMENTS}"
      },
      TABLE           => {
        width   => '100%',
        caption => "$lang{COMING} $lang{TYPE}",
        qs      => $pages_qs,
        ID      => 'CASHBOX',
        header  => '',
        EXPORT  => 1,
      },

      #SELECT_VALUE    => {
      # every_month    => { 0 => "$lang{NO}:text-danger",
      #                     1 => "$lang{YES}:text-primary",
      #},
      MAKE_ROWS       => 1,
      SEARCH_FORMER   => 1,
      MODULE          => 'Crm',
      TOTAL           => 1
    }
  );

  return 1;
}

#**********************************************************
=head2 cashbox_spending_add() -

  Arguments:
    $attr -
  Returns:

  Examples:

=cut
#**********************************************************
sub crm_cashbox_spending_add {

  my $action = 'add';
  my $action_lang = $lang{ADD};
  my %CASHBOX;

  if ($FORM{add}) {
    $Crm->add_spending({ %FORM, AID => $admin->{AID} });

    if (!$Crm->{errno}) {
      $html->message("success", "$lang{SUCCESS}", "$lang{ADDED}");
    }
    else {
      $html->message("err", "$lang{ERROR}", "$lang{NOT_ADDED}");
    }
  }
  elsif ($FORM{change}) {
    $Crm->change_spending({ %FORM, AID => $admin->{AID} });

    if (!$Crm->{errno}) {
      $html->message("success", "$lang{SUCCESS}", "$lang{CHANGED}");
    }
    else {
      $html->message("err", "$lang{ERROR}", "$lang{NOT_CHANGED}");
    }
  }

  if ($FORM{del}) {
    $Crm->delete_spending({ ID => $FORM{del} });

    if (!$Crm->{errno}) {
      $html->message("success", "$lang{SUCCESS}", "$lang{DELETED}");
    }
    else {
      $html->message("err", "$lang{ERROR}", "$lang{NOT_DELETED}");
    }
  }

  if ($FORM{chg}) {
    $html->message("info", $lang{CHANGE});

    my $spending_info = $Crm->info_spending({ COLS_NAME => 1, ID => $FORM{chg} });

    $action = 'change';
    $action_lang = "$lang{CHANGE}";
    $CASHBOX{DATE} = $spending_info->{DATE};
    $CASHBOX{COMMENTS} = $spending_info->{COMMENTS};
    $CASHBOX{AMOUNT} = $spending_info->{AMOUNT};
    $CASHBOX{SPENDING_TYPE_ID} = $spending_info->{SPENDING_TYPE_ID};
    $CASHBOX{CASHBOX_ID} = $spending_info->{CASHBOX_ID};
    $CASHBOX{ID} = $FORM{chg};
  }

  $CASHBOX{SPENDING_TYPE_SELECT} = $html->form_select(
    'SPENDING_TYPE_ID',
    {
      SELECTED    => $FORM{SPENDING_TYPE_ID} || $CASHBOX{SPENDING_TYPE_ID},
      SEL_LIST    => $Crm->list_spending_type({ COLS_NAME => 1 }),
      SEL_KEY     => 'id',
      SEL_VALUE   => 'name',
      NO_ID       => 1,
      SEL_OPTIONS => { "" => "" },
    }
  );

  $CASHBOX{CASHBOX_SELECT} = cashbox_select({ ID => $CASHBOX{CASHBOX_ID} });

  $html->tpl_show(
    _include('cashbox_spending_add', 'Crm'),
    {
      %CASHBOX,
      ACTION      => $action,
      ACTION_LANG => $action_lang,
      DATE        => $DATE
    }
  );

  result_former(
    {
      INPUT_DATA      => $Crm,
      FUNCTION        => 'list_spending',
      BASE_FIELDS     => 0,
      DEFAULT_FIELDS  => "ID, AMOUNT, CASHBOX_NAME, SPENDING_TYPE_NAME, DATE, ADMIN, COMMENTS",
      FUNCTION_FIELDS => 'crm_spending_document:$lang{DOCS}:id,change, del',
      EXT_TITLES      => {
        'amount'             => "$lang{SUM}",
        'cashbox_name'       => "$lang{CASHBOX}",
        'spending_type_name' => "$lang{SPENDING} $lang{TYPE}",
        'date'               => "$lang{DATE}",
        'id'                 => "ID",
        'admin'              => "$lang{ADMIN}",
        'comments'           => "$lang{COMMENTS}",
      },
      TABLE           => {
        width   => '100%',
        caption => "$lang{SPENDING}",
        qs      => $pages_qs,
        ID      => 'CASHBOX',
        header  => '',
        EXPORT  => 1,
        #        DATA_TABLE => 1,
      },

      #SELECT_VALUE    => {
      # every_month    => { 0 => "$lang{NO}:text-danger",
      #                     1 => "$lang{YES}:text-primary",
      #},
      MAKE_ROWS       => 1,
      SEARCH_FORMER   => 1,
      MODULE          => 'Crm',
      TOTAL           => 1
    }
  );

  return 1;
}

#**********************************************************

=head2 cashbox_coming_add() -

  Arguments:
    $attr -
  Returns:

  Examples:

=cut

#**********************************************************
sub crm_cashbox_coming_add {

  my $action = 'add';
  my $action_lang = "$lang{ADD}";
  my %CASHBOX;

  if ($FORM{add}) {
    $Crm->add_coming({ %FORM, AID => $admin->{AID} });

    if (!$Crm->{errno}) {
      $html->message("success", "$lang{SUCCESS}", "$lang{ADDED}");
    }
    else {
      $html->message("err", "$lang{ERROR}", "$lang{NOT_ADDED}");
    }
  }
  elsif ($FORM{change}) {
    $Crm->change_coming({ %FORM, AID => $admin->{AID} });

    if (!$Crm->{errno}) {
      $html->message("success", "$lang{SUCCESS}", "$lang{CHANGED}");
    }
    else {
      $html->message("err", "$lang{ERROR}", "$lang{NOT_CHANGED}");
    }
  }

  if ($FORM{del}) {
    $Crm->delete_coming({ ID => $FORM{del} });

    if (!$Crm->{errno}) {
      $html->message("success", "$lang{SUCCESS}", "$lang{DELETED}");
    }
    else {
      $html->message("err", "$lang{ERROR}", "$lang{NOT_DELETED}");
    }
  }

  if ($FORM{chg}) {
    $html->message("info", $lang{CHANGE});

    my $coming_info = $Crm->info_coming({ COLS_NAME => 1, ID => $FORM{chg} });

    $action = 'change';
    $action_lang = "$lang{CHANGE}";
    $CASHBOX{DATE} = $coming_info->{DATE};
    $CASHBOX{COMMENTS} = $coming_info->{COMMENTS};
    $CASHBOX{AMOUNT} = $coming_info->{AMOUNT};
    $CASHBOX{COMING_TYPE_ID} = $coming_info->{COMING_TYPE_ID};
    $CASHBOX{CASHBOX_ID} = $coming_info->{CASHBOX_ID};
    $CASHBOX{ID} = $FORM{chg};
  }

  $CASHBOX{COMING_TYPE_SELECT} = $html->form_select(
    'COMING_TYPE_ID',
    {
      SELECTED    => $FORM{COMING_TYPE_ID} || $CASHBOX{COMING_TYPE_ID},
      SEL_LIST    => $Crm->list_coming_type({ COLS_NAME => 1 }),
      SEL_KEY     => 'id',
      SEL_VALUE   => 'name',
      NO_ID       => 1,
      SEL_OPTIONS => { "" => "" },
    }
  );

  $CASHBOX{CASHBOX_SELECT} = cashbox_select({ ID => $CASHBOX{CASHBOX_ID} });

  $html->tpl_show(
    _include('cashbox_coming_add', 'Crm'),
    {
      %CASHBOX,
      ACTION      => $action,
      ACTION_LANG => $action_lang,
      DATE        => $DATE
    }
  );

  result_former(
    {
      INPUT_DATA      => $Crm,
      FUNCTION        => 'list_coming',
      BASE_FIELDS     => 0,
      DEFAULT_FIELDS  => "ID, AMOUNT, CASHBOX_NAME, COMING_TYPE_NAME, ADMIN, DATE, COMMENTS",
      FUNCTION_FIELDS => 'crm_coming_document:$lang{DOCS}:id,change, del',
      EXT_TITLES      => {
        'amount'           => "$lang{SUM}",
        'cashbox_name'     => "$lang{CASHBOX}",
        'coming_type_name' => "$lang{COMING} $lang{TYPE}",
        'date'             => "$lang{DATE}",
        'admin'            => "$lang{ADMIN}",
        'id'               => "#",
        'comments'         => "$lang{COMMENTS}",
      },
      TABLE           => {
        width   => '100%',
        caption => "$lang{COMING}",
        qs      => $pages_qs,
        ID      => 'CASHBOX',
        header  => '',
        EXPORT  => 1,
        #        DATA_TABLE => 1,
        #MENU   => "$lang{ADD}:index=" . get_function_index('ring_rule_add') . ':add' . ";$lang{SEARCH}:index=$index&search_form=1:search;",
      },

      #SELECT_VALUE    => {
      # every_month    => { 0 => "$lang{NO}:text-danger",
      #                     1 => "$lang{YES}:text-primary",
      #},
      MAKE_ROWS       => 1,
      SEARCH_FORMER   => 1,
      MODULE          => 'Crm',
      TOTAL           => 1
    }
  );

  return 1;
}

#**********************************************************
=head2 crm_coming_reports()

  Arguments:
     -

  Returns:

=cut
#**********************************************************
sub crm_coming_reports {
  reports(
    {
      DATE_RANGE       => 1,
      DATE             => $FORM{DATE},
      REPORT           => '',
      EX_PARAMS        => {
      },
      PERIOD_FORM      => 1,
      PERIODS          => 1,
      NO_TAGS          => 1,
      NO_GROUP         => 1,
      NO_ACTIVE_ADMINS => 1,
      EXT_TYPE         => {
        ADMINS    => $lang{ADMINS},
        PER_MONTH => $lang{PER_MONTH},
      },
      # FIELDS => {
      #   "1:STATE" => $lang{OPEN},
      #   "2:STATE" => $lang{CLOSED_UNSUCCESSFUL},
      #   "3:STATE" => $lang{CLOSED_SUCCESSFUL}
      # },
    }
  );
  my ($y, $m, $d) = split('-', $DATE);
  my $from_date = "$y-$m-01";
  my $to_date = "$y-$m-" . days_in_month({ DATE => $DATE });

  my @total_rows = ();
  my $report_table = '';

  if ($FORM{DATE}) {
    my @title_plain = ("$lang{SUM}",
      "$lang{CASHBOX}",
      "$lang{COMING} $lang{TYPE}",
      "$lang{DATE}",
      "$lang{ADMIN}",
      "$lang{COMMENTS}");

    my $coming_list = $Crm->list_coming({
      FROM_DATE => $FORM{DATE} || $from_date,
      TO_DATE   => $FORM{DATE} || $to_date,
      COLS_NAME => 1,
    });

    $report_table = $html->table(
      {
        width       => '100%',
        caption     => $lang{COMING},
        title_plain => \@title_plain,
        #      qs          => $pages_qs . "SEARCH_MSG_TEXT=$FORM{SEARCH_MSG_TEXT}",
        ID          => 'CRM_COMING_REPORT',
        DATA_TABLE  => 1,
      }
    );

    my $month_total_sum = 0.00;
    my $month_total_count = 0;

    foreach my $coming (@$coming_list) {
      $report_table->addrow(
        $coming->{amount},
        $coming->{cashbox_name},
        $coming->{coming_type_name},
        $coming->{date},
        $coming->{admin},
        $coming->{comments},
      );

      $month_total_count += 1;
      $month_total_sum += $coming->{amount};
    }

    push @total_rows, [ "$lang{SUM}:", $html->b(sprintf('%.2f', $month_total_sum)) ];
    push @total_rows, [ "$lang{COUNT}", $html->b($month_total_count) ];
  }
  else {
    my @title_plain = ($lang{DATE}, "$lang{SUM}", $lang{COUNT});
    $report_table = $html->table(
      {
        width       => '100%',
        caption     => $lang{COMING},
        title_plain => \@title_plain,
        #      qs          => $pages_qs . "SEARCH_MSG_TEXT=$FORM{SEARCH_MSG_TEXT}",
        ID          => 'CRM_COMING_REPORT',
        DATA_TABLE  => 1,
      }
    );
    my $report_info = $Crm->crm_list_coming_report({
      FROM_DATE => $FORM{FROM_DATE} || $from_date,
      TO_DATE   => $FORM{TO_DATE} || $to_date,
      COLS_NAME => 1,
    });

    my $month_total_sum = 0.00;
    my $month_total_count = 0;
    foreach my $info (@$report_info) {
      $report_table->addrow(
        $html->button($info->{date}, "index=$index&DATE=$info->{date}"),
        $info->{total_sum},
        $info->{total_count});

      $month_total_count += $info->{total_count};
      $month_total_sum += $info->{total_sum};
    }

    push @total_rows, [ "$lang{SUM}:", $html->b(sprintf('%.2f', $month_total_sum)) ];
    push @total_rows, [ "$lang{COUNT}", $html->b($month_total_count) ];
  }

  my $table = $html->table(
    {
      width      => '100%',
      cols_align => [ 'right', 'right' ],
      rows       => \@total_rows
    }
  );

  print $report_table->show();
  print $table->show();

  return 1;
}

#**********************************************************
=head2 crm_coming_reports()

  Arguments:
     -

  Returns:

=cut
#**********************************************************
sub crm_spending_reports {
  reports(
    {
      DATE_RANGE       => 1,
      DATE             => $FORM{DATE},
      REPORT           => '',
      EX_PARAMS        => {
      },
      PERIOD_FORM      => 1,
      PERIODS          => 1,
      NO_TAGS          => 1,
      NO_GROUP         => 1,
      NO_ACTIVE_ADMINS => 1,
      EXT_TYPE         => {
        ADMINS    => $lang{ADMINS},
        PER_MONTH => $lang{PER_MONTH},
      },
      # FIELDS => {
      #   "1:STATE" => $lang{OPEN},
      #   "2:STATE" => $lang{CLOSED_UNSUCCESSFUL},
      #   "3:STATE" => $lang{CLOSED_SUCCESSFUL}
      # },
    }
  );
  my ($y, $m, $d) = split('-', $DATE);
  my $from_date = "$y-$m-01";
  my $to_date = "$y-$m-" . days_in_month({ DATE => $DATE });

  my @total_rows = ();
  my $report_table = '';

  if ($FORM{DATE}) {
    my @title_plain = ("$lang{SUM}",
      "$lang{CASHBOX}",
      "$lang{SPENDING} $lang{TYPE}",
      "$lang{DATE}",
      "$lang{ADMIN}",
      "$lang{COMMENTS}");

    my $spending_list = $Crm->list_spending({
      FROM_DATE => $FORM{DATE} || $from_date,
      TO_DATE   => $FORM{DATE} || $to_date,
      COLS_NAME => 1,
    });

    $report_table = $html->table(
      {
        width       => '100%',
        caption     => $lang{SPENDING},
        title_plain => \@title_plain,
        #      qs          => $pages_qs . "SEARCH_MSG_TEXT=$FORM{SEARCH_MSG_TEXT}",
        ID          => 'CRM_SPENDING_REPORT',
        DATA_TABLE  => 1,
      }
    );

    my $month_total_sum = 0.00;
    my $month_total_count = 0;

    foreach my $coming (@$spending_list) {
      $report_table->addrow(
        $coming->{amount},
        $coming->{cashbox_name},
        $coming->{spending_type_name},
        $coming->{date},
        $coming->{admin},
        $coming->{comments},
      );

      $month_total_count += 1;
      $month_total_sum += $coming->{amount};
    }

    push @total_rows, [ "$lang{SUM}:", $html->b(sprintf('%.2f', $month_total_sum)) ];
    push @total_rows, [ "$lang{COUNT}", $html->b($month_total_count) ];
  }
  else {
    my @title_plain = ($lang{DATE}, "$lang{SUM}", $lang{COUNT});
    $report_table = $html->table(
      {
        width       => '100%',
        caption     => $lang{SPENDING},
        title_plain => \@title_plain,
        #      qs          => $pages_qs . "SEARCH_MSG_TEXT=$FORM{SEARCH_MSG_TEXT}",
        ID          => 'CRM_SPENDING_REPORT',
        DATA_TABLE  => 1,
      }
    );
    my $report_info = $Crm->crm_list_spending_report({
      FROM_DATE => $FORM{FROM_DATE} || $from_date,
      TO_DATE   => $FORM{TO_DATE} || $to_date,
      COLS_NAME => 1,
    });

    my $month_total_sum = 0.00;
    my $month_total_count = 0;
    foreach my $info (@$report_info) {
      $report_table->addrow(
        $html->button($info->{date}, "index=$index&DATE=$info->{date}"),
        $info->{total_sum},
        $info->{total_count});

      $month_total_count += $info->{total_count};
      $month_total_sum += $info->{total_sum};
    }

    push @total_rows, [ "$lang{SUM}:", $html->b(sprintf('%.2f', $month_total_sum)) ];
    push @total_rows, [ "$lang{COUNT}", $html->b($month_total_count) ];
  }

  my $table = $html->table(
    {
      width      => '100%',
      cols_align => [ 'right', 'right' ],
      rows       => \@total_rows
    }
  );

  print $report_table->show();
  print $table->show();

  return 1;
}

#**********************************************************

=head2 cashbox_select() -

  Arguments:
    $attr -
  Returns:

  Examples:

=cut

#**********************************************************
sub cashbox_select {
  my ($attr) = @_;

  my $cashbox_select = $html->form_select(
    'CASHBOX_ID',
    {
      SELECTED    => $conf{CRM_DEFAULT_CASHBOX} || $FORM{CASHBOX_ID} || $attr->{ID},
      SEL_LIST    => $Crm->list_cashbox({ COLS_NAME => 1 }),
      SEL_KEY     => 'id',
      SEL_VALUE   => 'name',
      NO_ID       => 1,
      SEL_OPTIONS => { "" => "" },
      MAIN_MENU   => get_function_index('crm_cashbox_main')
    }
  );

  return $cashbox_select;
}

#**********************************************************

=head2 spending_select() -

  Arguments:
    $attr -
  Returns:

  Examples:

=cut

#**********************************************************
sub spending_select {
  my ($attr) = @_;

  my $list = $Crm->list_spending_type({ COLS_NAME => 1 });

  push (@$list, { 'id' => '!0', name => "$lang{NO_TYPE}" });

  my $spending_type_select = $html->form_select(
    'SPENDING_TYPE_ID',
    {
      SELECTED    => $FORM{SPENDING_TYPE_ID} || $attr->{ID},
      SEL_LIST    => $list,
      SEL_KEY     => 'id',
      SEL_VALUE   => 'name',
      NO_ID       => 1,
      SEL_OPTIONS => { "" => "" },
      MAIN_MENU   => get_function_index('crm_spending_type')
    }
  );

  return $spending_type_select;
}

#**********************************************************

=head2 coming_select() -

  Arguments:
    $attr -
  Returns:

  Examples:

=cut

#**********************************************************
sub coming_select {
  my ($attr) = @_;

  my $list = $Crm->list_coming_type({ COLS_NAME => 1 });

  push (@$list, { 'id' => '!0', name => "$lang{NO_TYPE}" });

  my $coming_type_select = $html->form_select(
    'COMING_TYPE_ID',
    {
      SELECTED    => $FORM{COMING_TYPE_ID} || $attr->{ID},
      SEL_LIST    => $list,
      SEL_KEY     => 'id',
      SEL_VALUE   => 'name',
      NO_ID       => 1,
      SEL_OPTIONS => { "" => "" },
      MAIN_MENU   => get_function_index('crm_coming_type')
    }
  );

  return $coming_type_select;
}

#**********************************************************

=head2 crm_spending_document() -

  Arguments:
    $attr -
  Returns:

  Examples:

=cut
#**********************************************************
sub crm_spending_document {

  return 1;
}

#**********************************************************

=head2 crm_coming_document() -

  Arguments:
    $attr -
  Returns:

  Examples:

=cut
#**********************************************************
sub crm_coming_document {

  return 1;
}


#**********************************************************

=head2 crm_reference_works() -

  Arguments:
    $attr -
  Returns:

  Examples:

=cut

#**********************************************************
sub crm_reference_works {
  my $action = 'add';
  my $action_lang = "$lang{ADD}";
  my %INFO;

  if ($FORM{add}) {
    $Crm->add_reference_works({ %FORM });

    if (!$Crm->{errno}) {
      $html->message('success', "$lang{SUCCESS}", "$lang{ADDED}");
    }
  }
  elsif ($FORM{change}) {
    $Crm->change_reference_works({ %FORM });

    if (!$Crm->{errno}) {
      $html->message('success', "$lang{SUCCESS}", "$lang{CHANGED}");
    }
  }
  elsif ($FORM{chg}) {
    my $info_work = $Crm->info_reference_works({ ID => $FORM{chg} });

    $INFO{NAME} = $info_work->{NAME};
    $INFO{SUM} = $info_work->{SUM};
    $INFO{TIME} = $info_work->{TIME};
    $INFO{UNITS} = $info_work->{UNITS};
    $INFO{DISABLED} = $info_work->{DISABLED};
    $INFO{ID} = $info_work->{ID};
    $INFO{COMMENTS} = $info_work->{COMMENTS};
    $action = 'change';
    $action_lang = "$lang{CHANGE}";
  }
  elsif ($FORM{del} && $FORM{COMMENTS}) {
    $Crm->delete_reference_works({ ID => $FORM{del} });

    if (!$Crm->{errno}) {
      $html->message('success', "$lang{SUCCESS}", "$lang{DELETED}");
    }
  }

  _error_show($Crm);

  $html->tpl_show(
    _include('reference_works', 'Crm'),
    {
      ACTION      => $action,
      ACTION_LANG => $action_lang,
      %INFO
    }
  );

  result_former(
    {
      INPUT_DATA      => $Crm,
      FUNCTION        => 'list_reference_works',
      BASE_FIELDS     => 0,
      DEFAULT_FIELDS  => "ID, NAME, SUM, TIME, UNITS, DISABLED, COMMENTS",
      FUNCTION_FIELDS => 'change, del',
      SELECT_VALUE    => {
        disabled => {
          0 => "$lang{ENABLE}:text-primary",
          1 => "$lang{DISABLED}:text-danger"
        },
      },
      EXT_TITLES      => {
        'id'       => "ID",
        'name'     => "$lang{NAME}",
        'sum'      => "$lang{SUM}",
        'TIME'     => "$lang{TIME} ($lang{HOURS})",
        'disabled' => "$lang{DISABLED}",
        'units'    => "$lang{UNITS}",
        'comments' => "$lang{COMMENTS}",
      },
      TABLE           => {
        width   => '100%',
        caption => "$lang{REFERENCE_WORKS}",
        qs      => $pages_qs,
        ID      => 'REFERENCE_WORKS',
        header  => '',
        EXPORT  => 1,

        #MENU   => "$lang{ADD}:index=" . get_function_index('ring_rule_add') . ':add' . ";$lang{SEARCH}:index=$index&search_form=1:search;",
      },

      #SELECT_VALUE    => {
      # every_month    => { 0 => "$lang{NO}:text-danger",
      #                     1 => "$lang{YES}:text-primary",
      #},
      MAKE_ROWS       => 1,
      SEARCH_FORMER   => 1,
      MODULE          => 'Crm',
      TOTAL           => 1
    }
  );

  return 1;
}

#**********************************************************

=head2 crm_works() -

  Arguments:
    $attr -


  Returns:

  Examples:

=cut

#**********************************************************
sub crm_works {
  my ($attr) = @_;

  $Crm->{ACTION} = 'add';
  $Crm->{ACTION_LNG} = $lang{ADD};

  if ($FORM{TAKE_FEES} && ($FORM{add} || $FORM{change})) {
    my $fee_sum = 0;
    if ($FORM{EXTRA_SUM}) {
      $fee_sum = $FORM{EXTRA_SUM};
    }
    else {
      $Crm->info_reference_works({ ID => $FORM{WORK_ID} });
      if ($Crm->{TOTAL}) {
        $fee_sum = $Crm->{SUM} * ($FORM{RATIO} || 1);
      }
    }

    use Fees;
    my $Fees = Fees->new($db, $admin, \%conf);
    $Fees->take(
      $users,
      sprintf("%.2f", $fee_sum),
      {
        DESCRIBE => "msgs_work # $FORM{EXT_ID}"
      }
    );
    if (!_error_show($Fees)) {
      $html->message('info', "$lang{GETED}: " . sprintf("%.2f", $fee_sum));
    }
    $admin->action_add($users->{UID}, "msgs_work #$FORM{EXT_ID} $lang{GETED}: " . sprintf("%.2f", $fee_sum), {});
    $FORM{FEES_ID} = $Fees->{INSERT_ID};
  }

  if ($FORM{add}) {
    $Crm->works_add({ %FORM, DATE => "$DATE $TIME" });
    if (!$Crm->{errno}) {
      $html->message('info', $lang{ERROR}, "$lang{WORK} $lang{ADDED} ");
      return 1;
    }
  }
  elsif ($FORM{change}) {
    $Crm->works_change(\%FORM);
    if (!$Crm->{errno}) {
      $html->message('info', $lang{ERROR}, "$lang{WORK} $lang{CHANGING} ");
      return 1;
    }
  }
  elsif ($FORM{chg}) {
    $Crm->works_info($FORM{chg});
    if (!$Crm->{errno}) {
      $html->message('info', $lang{ERROR}, "$lang{WORK} $lang{CHANGED} ");
      $Crm->{ACTION} = 'change';
      $Crm->{ACTION_LNG} = $lang{CHANGE};
    }
  }
  elsif ($FORM{del} && $FORM{COMMENTS}) {
    $Crm->works_del($FORM{del});
    if (!$Crm->{errno}) {
      $html->message('info', $lang{ERROR}, "$lang{WORK} $lang{DELETED} ");
      return 1;
    }
  }

  _error_show($Crm);

  if ($attr->{EXT_ID}) {
    $Crm->{EXT_ID} = $attr->{EXT_ID};
    $Crm->{UID} = $attr->{UID};
    $Crm->{WORK} = $attr->{EXT_ID};
  }

  $Crm->{ADMIN_SEL} = sel_admins({ SELECTED => $Crm->{EMPLOYEE_ID}, NAME => 'EMPLOYEE_ID', REQUIRED => 1 });
  $Crm->{WORK_SEL} = $html->form_select(
    'WORK_ID',
    {
      SELECTED       => $Crm->{WORK_ID} || $FORM{WORK_ID},
      SEL_LIST       => $Crm->list_reference_works({ COLS_NAME => 1, PAGE_ROWS => 10000 }),
      SEL_KEY        => 'id',
      SEL_VALUE      => 'name,sum',
      NO_ID          => 1,

      #SEL_OPTIONS => { '' => '--' },
      MAIN_MENU      => get_function_index('crm_reference_works'),
      MAIN_MENU_ARGV => ($Crm->{WORK_ID}) ? "chg=$Crm->{WORK_ID}" : '',
      EX_PARAMS      => ' required'
    }
  );

  $Crm->{RATIO} ||= 1;
  if ($Crm->{FEES_ID}) {
    $Crm->{TAKE_FEES} = $html->b($lang{GETED});
  }
  else {
    my $element1 = $html->form_input('TAKE_FEES', '1', { TYPE => 'checkbox', EX_PARAMS => '' });
    my $element2 = $html->element('LABEL', "$element1 $lang{TAKE_FEE}", {});
    my $element3 = $html->element('DIV', "$element2", { "class" => "checkbox" });
    $Crm->{TAKE_FEES} = $element3;
  }
  $html->tpl_show(_include('crm_work_add', 'Crm'), $Crm);

  crm_works_list($attr);

  return 0;
}

#**********************************************************

=head2 crm_works_list() -

  Arguments:
    $attr -


  Returns:

  Examples:

=cut

#**********************************************************
sub crm_works_list {
  my ($attr) = @_;

  $LIST_PARAMS{EXT_ID} = $attr->{EXT_ID};
  $LIST_PARAMS{WORK_ID} = $attr->{WORK_ID};

  $pages_qs .= "&WORK=$attr->{EXT_ID}";

  result_former(
    {
      INPUT_DATA      => $Crm,
      FUNCTION        => 'works_list',
      BASE_FIELDS     => 0,
      DEFAULT_FIELDS  => "DATE,EMPLOYEE,WORK,SUM,COMMENTS,FEES_ID",
      FUNCTION_FIELDS => 'change, del',
      SKIP_USER_TITLE => 1,
      EXT_TITLES      => {
        'id'         => "ID",
        'employee'   => $lang{EMPLOYEES},
        'admin_name' => $lang{ADMIN},
        'work_id'    => "ID $lang{WORK} ",
        'work'       => $lang{WORK},
        'ratio'      => $lang{RATIO},
        'extra_sum'  => "$lang{EXTRA} $lang{SUM}",
        'comments'   => $lang{COMMENTS},
        'paid'       => $lang{PAID},
        'sum'        => $lang{SUM},
        'date'       => $lang{DATE},
        'fees_id'    => $lang{FEE_TAKEN}
      },
      TABLE           => {
        width   => '100%',
        caption => $lang{WORK},
        qs      => $pages_qs,
        ID      => 'CRM_WORKS',
        MENU    => "$lang{ADD}:index=$index$pages_qs:add",

        #EXPORT  => 1,
      },
      SELECT_VALUE    => {
        paid => {
          0 => "$lang{NO}:text-danger",
          1 => "$lang{YES}:text-primary",
        }
      },
      FILTER_COLS     => {
        fees_id => '_fee_taken_msg::',
      },
      MAKE_ROWS       => 1,
      SEARCH_FORMER   => 1,
      MODULE          => 'Crm',
      TOTAL           => "TOTAL:$lang{TOTAL};TOTAL_SUM:$lang{SUM}",
    }
  );

  return 1;
}

#**********************************************************

=head2 crm_report_list() -

  Arguments:
    $attr -


  Returns:

  Examples:

=cut

#**********************************************************
sub crm_report_list {

  if ($FORM{wtch}) {
    crm_works_list(
      {
        WORK_ID => $FORM{wtch},
        EXT_ID  => '',
      }
    );
    return 1;
  }

  my %srm_table_info;
  my %srm_table_info_id;
  my %info;

  $info{DATE} = $html->form_daterangepicker({ NAME => 'FROM_DATE/TO_DATE' });
  my $reference_works = $Crm->list_reference_works(
    {
      DISABLED  => $FORM{disable} ? '0,1' : '!1',
      NAME      => '_SHOW',
      SUM       => '_SHOW',
      COLS_NAME => 1,
    }
  );
  my @ids;
  my $ref_work = 0;

  foreach my $ref_id (@$reference_works) {
    $ref_work = push @ids, $ref_id->{id};
  }
  my $id_work_string = join(';', @ids);
  my $workers = $Crm->works_list(
    {
      WORK_ID   => $id_work_string,
      WORK      => '_SHOW',
      NAME      => '_SHOW',
      SUM       => '_SHOW',
      DATE      => $FORM{FROM_DATE_TO_DATE},
      COLS_NAME => 1,
    }
  );
  $srm_table_info{'max_sum'} = 0;
  foreach my $srm_work_info (@$workers) {
    $srm_table_info_id{ $srm_work_info->{work_id} } = $srm_work_info->{work};

    $srm_table_info{ $srm_work_info->{work_id} . '_SUM' } += $srm_work_info->{sum} || 0;
    $srm_table_info{ $srm_work_info->{work_id} . '_WORK_SUM' } += 1;
    $srm_table_info{'total_sum'} += $srm_work_info->{sum};
    $srm_table_info{'total_sum_work'} += 1;
    if ($srm_table_info{ $srm_work_info->{work_id} . '_SUM' } > $srm_table_info{'max_sum'}) {
      $srm_table_info{'max_sum'} = $srm_table_info{ $srm_work_info->{work_id} . '_SUM' };
    }
  }
  my $crm_works_table = $html->table(
    {
      width   => '100%',
      caption => "$lang{WORK}",
      title   => [ "ID", $lang{NAME}, $lang{SUM}, $lang{PERCENTAGE} . ' ' . $lang{SUM}, $lang{EXECUTED},
        $lang{PERCENTAGE} . ' ' . $lang{EXECUTED} ]
    }
  );
  my $bage;
  foreach my $srm_referens (@$reference_works) {
    if ($srm_referens->{disabled} == 0) {
      $bage = '';
    }
    else {
      $bage = $html->element('i', '', { class => "fa fa-fw fa-close" });
    }

    if (defined($srm_table_info_id{ $srm_referens->{'id'} })) {
      $crm_works_table->addrow(
        $srm_referens->{'id'},
        $bage . $html->button($srm_table_info_id{ $srm_referens->{'id'} },
          "index=" . get_function_index('crm_reference_works') . "&chg=$srm_referens->{'id'}&MODULE=Crm"),
        $srm_table_info{ $srm_referens->{'id'} . '_SUM' },
        $html->progress_bar(
          {
            TOTAL        => $srm_table_info{'total_sum'},
            COMPLETE     => $srm_table_info{ $srm_referens->{'id'} . '_SUM' },
            PERCENT_TYPE => 1,
            COLOR        => 'ADAPTIVE',
            MAX          => $srm_table_info{'max_sum'},
          },
        ),

        $html->button($srm_table_info{ $srm_referens->{'id'} . '_WORK_SUM' },
          "index=$index&wtch=$srm_referens->{'id'}"),
        $html->progress_bar(
          {
            TOTAL        => $srm_table_info{'total_sum_work'},
            COMPLETE     => $srm_table_info{ $srm_referens->{'id'} . '_WORK_SUM' },
            PERCENT_TYPE => 1,
            COLOR        => 'MAX_COLOR',
          },
        ),
      );
    }
    else {
      $crm_works_table->addrow(
        $srm_referens->{'id'},
        $bage . $html->button($srm_referens->{'name'}),
        '0',
        $html->progress_bar(
          {
            TOTAL        => $srm_table_info{'total_sum'},
            COMPLETE     => '0',
            PERCENT_TYPE => 1,
            COLOR        => 'ADAPTIVE',
            MAX          => $srm_table_info{'max_sum'},
          },
        ),
        $html->button('0', "index=$index&wtch=$srm_referens->{'id'}"),
        $html->progress_bar(
          {
            TOTAL        => $srm_table_info{'total_sum_work'},
            COMPLETE     => '0',
            PERCENT_TYPE => 1,
            COLOR        => 'ADAPTIVE',
          },
        )
      );
    }
  }

  $crm_works_table->addrow("$lang{TOTAL}", '', $srm_table_info{'total_sum'}, '', $srm_table_info{'total_sum_work'}, '');
  $html->tpl_show(_include('crm_report_list', 'Crm'), \%info);

  print $crm_works_table->show();

  return 1;

}

#**********************************************************
=head2 crm_today_actions()

  Arguments:
     -

  Returns:

=cut
#**********************************************************
sub crm_today_actions {
  my $today_actions = $Crm->progressbar_comment_list({
    AID          => $admin->{AID},
    PLANNED_DATE => $DATE,
    ACTION_ID    => '>0',
    STATUS       => '0',
    LEAD_ID      => '_SHOW',
    ACTION       => '_SHOW',
    LEAD_FIO     => '_SHOW',
    COLS_NAME    => 1,
    PAGE_ROWS    => 999999
  });

  my $actions_table = $html->table(
    {
      width   => '100%',
      caption => "$lang{ACTION} CRM",
      title   => [ "$lang{FIO}", "$lang{ACTION}", "$lang{DATE}", '' ],
      ID      => 'CRM_TODAY_ACTION',
    }
  );

  my $leads_function_index = get_function_index('crm_lead_info');
  foreach my $action (@$today_actions) {
    my $lead_button = $html->button("$lang{SHOW}", "index=$leads_function_index&LEAD_ID=$action->{lead_id}");
    $actions_table->addrow($action->{lead_fio}, $action->{action}, $action->{planned_date}, $lead_button);
  }

  return $actions_table->show();
}

#**********************************************************
=head2 paysys_start_page($attr)

  Arguments:


  Returns:

=cut
#**********************************************************
sub crm_start_page {
  #my ($attr) = @_;

  my %START_PAGE_F = (
    'crm_today_actions' => "$lang{TODAY} $lang{ACTION}",
  );

  return \%START_PAGE_F;
}

#**********************************************************
=head2 _fee_taken_msg()
    
    filter for result former

=cut
#**********************************************************
sub _fee_taken_msg {
  my ($value) = @_;
  my $result = $html->color_mark($lang{NO}, "text-danger");

  if ($value && $value > 0) {
    $result = $html->color_mark($lang{YES}, "text-success");;
  }
  return $result;
}


1