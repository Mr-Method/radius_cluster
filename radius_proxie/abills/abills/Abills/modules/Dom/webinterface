use warnings;
use strict;
use Dom;
use JSON qw/to_json/;
use Users;
use Address;
use Nas;

our (
  $db,
  $admin,
  %conf,
  $html,
  %lang
);

my $Address = Address->new($db, $admin, \%conf);
my $Dom = Dom->new($db, $admin, \%conf);
my $Nas = Nas->new($db, $admin, \%conf);
#**********************************************************
=head2 dom_info() Create 2D build model
  Returns:
      1
=cut
#**********************************************************
sub dom_info {
  my %info;
  my $address_info = $Address->address_info($FORM{LOCATION_ID});
  my $build_info = $Address->build_info(
    {
      ID => $FORM{LOCATION_ID},
    }
  );
  my $nas_i = $Nas->list({
    LOCATION_ID     => $FORM{LOCATION_ID},
    NAS_NAME        => '_SHOW',
    NAS_FLOOR       => '_SHOW',
    NAS_ENTRANCE    => '_SHOW',
    COLS_NAME       => 1,
  });

  if (!$FORM{LOCATION_ID} || !$build_info->{TOTAL}) {
    $html->message('warn', $lang{ERROR}, "$lang{BUILD} $lang{NOT_EXIST}");
    return 0;
  }

  if (!$build_info->{FLORS} || !$build_info->{ENTRANCES} || (!$build_info->{FLATS} && !$build_info->{BUILD_SCHEMA})) {
    $html->message('warn', $lang{ERROR},
      "$lang{INCORRECT_PARAMETERS_BUILDINGS}
      $lang{FLORS} = $build_info->{FLORS}
      $lang{ENTRANCES} = $build_info->{ENTRANCES}
      $lang{FLATS} = $build_info->{FLATS}"
    );
    return 0;
  }

  my $users_list = $Dom->list(
    {
      FIO                 => '_SHOW',
      LOCATION_ID         => $FORM{LOCATION_ID},
      ADDRESS_BUILD       => '_SHOW',
      UID                 => '_SHOW',
      CITY                => '_SHOW',
      COMPANY_ID          => '_SHOW',
      DISABLE             => '_SHOW',
      CREDITOR            => '_SHOW',
      DEBETOR             => '_SHOW',
      ADDRESS_FLAT        => '_SHOW',
      ADDRESS_STREET      => '_SHOW',
      NAME                => '_SHOW',
      NUMBERING_DIRECTION => '_SHOW',
      PAGE_ROWS           => 10000,
      COLS_NAME           => 1,
    }
  );

  $info{DISTRICT_NAME} = $address_info->{ADDRESS_DISTRICT};
  $info{STREET_NAME} = $address_info->{ADDRESS_STREET};
  $info{BUILD_NAME} = $address_info->{ADDRESS_BUILD};

  $Dom->{TOTAL} //= 1;

  my %user_by_flat;
  my %lang_pack = (
    FLAT => $lang{ADDRESS_FLAT},
    FIO  => $lang{FIO},
  );

  $info{BUILD_FLATS} = $build_info->{FLATS};
  $info{BUILD_FLORS} = $build_info->{FLORS};
  $info{BUILD_ENTRANCES} = $build_info->{ENTRANCES};
  $info{FLORS_SUM} = $build_info->{FLORS} * $build_info->{ENTRANCES};
  $info{NUMBERING_DIRECTION} = $build_info->{NUMBERING_DIRECTION};
  if (!$build_info->{BUILD_SCHEMA}) {
    $build_info->{BUILD_SCHEMA} = '::' . int($build_info->{FLATS} / ($build_info->{FLORS} * $build_info->{ENTRANCES}));
  }

  my %build_schema = ();

  $info{BUILD_FLATS} = 0;
  for (my $i = 1; $i <= $build_info->{ENTRANCES}; $i++) {
    for (my $j = 1; $j <= $build_info->{FLORS}; $j++) {
      my ($flats) = $build_info->{BUILD_SCHEMA} =~ /$i:$j:(\d+)/;
      if (!defined($flats) || $flats eq '') {
        ($flats) = $build_info->{BUILD_SCHEMA} =~ /$i\:\:(\d+)/;
      }
      if (!defined($flats) || $flats eq '') {
        ($flats) = $build_info->{BUILD_SCHEMA} =~ /\D\:$j\:(\d+)/;
      }
      if (!defined($flats) || $flats eq '') {
        ($flats) = $build_info->{BUILD_SCHEMA} =~ /\:\:(\d+)/;
      }
      if ((defined($flats) && !$info{FLORS_ROOMS}) || (defined($flats) && $flats > $info{FLORS_ROOMS})) {
        $info{FLORS_ROOMS} = $flats;
      }
      $build_schema{dom}[$i - 1]{entrances} = $i;
      $build_schema{dom}[$i - 1]{data}[$j - 1] = { floors => $j, flats => $flats };
      $info{BUILD_FLATS} += $flats;
      # $build_schema{$i}{$j} = $flats;
    }
  }
  $info{FLATS_SUM_WITH_NON_DB_INFO} = $info{FLORS_ROOMS} * $info{FLORS_SUM};

  $info{USER_SUM_WITH_NO_ROOM} = 0;

  foreach my $user (@$users_list) {
    $user_by_flat{ $user->{address_flat} } = $user;
    if ($user->{address_flat} > $info{FLATS_SUM_WITH_NON_DB_INFO}) {
      $info{USER_SUM_WITH_NO_ROOM}++;

      if ($info{USER_WITH_NO_ROOM_UID}) {
        $info{USER_WITH_NO_ROOM_UID} .= ';' . $user->{uid};
      }
      else {
        $info{USER_WITH_NO_ROOM_UID} .= $user->{uid};
      }

    }
  }
  $info{CLIENTS_FLATS_SUM} = $Dom->{TOTAL} - $info{USER_SUM_WITH_NO_ROOM};
  $info{PERCENTAGE} = int($info{CLIENTS_FLATS_SUM} * 100 / $info{BUILD_FLATS});
  $info{SHOW_USERS} = "$SELF_URL?index=7&search_form=1&type=11&search=1&UID=" . $info{USER_WITH_NO_ROOM_UID} if ($info{USER_WITH_NO_ROOM_UID});
  my $json_text = to_json(\%user_by_flat, { utf8 => 0 });
  my $json_lang_pack = to_json(\%lang_pack, { utf8 => 0 });
  my $json_build_schema = to_json(\%build_schema, { utf8 => 0 });

  $info{LANG_PACK} = $json_lang_pack;
  $info{USER_INFO} = $json_text;
  $info{BUILD_SCHEMA} = $json_build_schema;

  my $table = $html->table(
    {
      width   => '100%',
      caption => $lang{SWITCHBOARDS},
      title   => [
        $lang{NAME},
        $lang{ENTRANCE},
        $lang{FLOOR},
      ],
      ID      => 'DOM',
    }
  );
  foreach my $item (@$nas_i) {
    $table->addrow( $item->{nas_name}, $item->{nas_entrance}, $item->{nas_floor} );
  }
  $info{TABLE_NAS} .= $table->show({NO_DEBUG_MARKERS => 1});

  $html->tpl_show(_include('dom_show', 'Dom'), \%info);

  return 1;
}

1
